elixir looks for a way to make the value of the left side the same as the value of the right side.

list = [1 ,3 ,4, 5]

[a, b, c, d] = list 

elixir call this pattern matching.
A pattern ( the left side ) is matched if the values ( the right side ) have the same structure and if each term in the pattern 
can be matched to the corresponding term in the values.
A literal value in the pattern matched the exact value
A variable in the pattern matches by taking on the corresponding value


ignoring a value with underscore
===============================
if we didnt need to capture a value during the match, we could use the special variable _ (an underscore)
this acts like a variable but immediately discards any value given to it in a pattern match.

variables bind once per match
==============================
once a variable has been bound to a value in the matching process , it keeps that value for the remainder of the match

---code-----
iex(45)> [a,a] = [1,1]
[1, 1]
iex(46)> a
1
iex(47)> [b,b] = [1,2]
** (MatchError) no match of right hand side value: [1, 2]
    (stdlib 5.0.2) erl_eval.erl:498: :erl_eval.expr/6
    iex:47: (file)
iex(47)> 
---end code------

the first expression in this example succeeds because a is initially matched with the first 1 on the right side.
the value in a is then used in the second term to match the second 1 on the right side

in the next expression, the first b matches the 1, but the second b (whose value is now 1) corresponds to the value 2 
on the right, b cannot have two different values so the match fails

However a variable can be bound to a new value in a subsequent match , and its current value does not participate
in the new match 

what if we want to force elixir to use the existing value of the variable in the patter ? 
Prefix it with ^ (a caret) . In elixir, we call this the pin operator

---code-----
iex(62)> a = 1
1
iex(63)> a = 2
2
iex(64)> ^a = 1
** (MatchError) no match of right hand side value: 1
    (stdlib 5.0.2) erl_eval.erl:498: :erl_eval.expr/6
    iex:64: (file)
iex(64)> 
---end code------
